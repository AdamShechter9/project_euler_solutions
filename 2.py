"""
Project Euler
Problem 2
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.

author:  Adam Shechter

Possible solutions:

1.  Classic solution will use a recursive function for the fibonacci sequence,
    and add up even-valued numbers.

2.  Another solution, will use a generator function for the fibonacci sequence,
    while another function will test for even numbers and return their sum.

"""


def main():
    print(sum_fibonacci())


def sum_fibonacci():
    sum_f = 0
    index = 1
    fib_seq = fibonacci_sequence()
    value = next(fib_seq)
    while value <= 4000000:
        print("index: {}    value: {}".format(index, value), end=' ')
        if value % 2 == 0:
            print("added", end=' ')
            sum_f += value
        index += 1
        value = next(fib_seq)
        print("")
    return sum_f


def fibonacci_sequence():
    n1 = 1
    n2 = 1
    while True:
        yield n2
        temp = n1
        n1 = n2
        n2 = n1 + temp


if __name__ == '__main__':
    main()
